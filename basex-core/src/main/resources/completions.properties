# This property file specifies code completions for the GUI editor.
#
# The string specified as key will be replaced with the assigned value.
# An underscore in the value specifies where the cursor will be located.

//=/descendant-or-self::node()/
/=root()
..=parent::node()
.=self::node()
@=attribute
abs=abs(_)
adtt=adjust-date-to-timezone(_)
aev=available-environment-variables(_)
ance=ancestor::
aos=ancestor-or-self::
appl=apply(_)
as=analyze-string(_)
attt=adjust-time-to-timezone(_)
attr=attribute()
avg=avg(_)
bool=boolean(_)
bu=base-uri(_)
cd=current-date(_)
cdt=current-dateTime(_)
ce=codepoint-equal(_)
ceil=ceiling(_)
chil=child::
coll=collection(_)
comm=comment()
comp=compare(_)
conc=concat(_)
cont=contains(_)
copy=copy $_ := \nmodify \nreturn 
coun=count(_)
cr=&#xD;
ct=contains text
ct=contains-token(_)
ct=current-time(_)
cts=codepoints-to-string(_)
da=doc-available(_)
data=data(_)
dc=default-collation(_)
dl=default-language(_)
de=deep-equal(_)
delete=delete node _
desc=descendant::
df=declare function _() {\n  \n};
dfd=day-from-date(_)
dfd=days-from-duration(_)
dfdt=day-from-dateTime(_)
dn=document-node()
dn=declare namespace _ = '';
dno=declare namespace output = 'http://www.w3.org/2010/xslt-xquery-serialization';
do=declare option _ '';
doc=doc(_)
doo=declare option output:_ '';
dos=descendant-or-self::
dt=dateTime(_)
du=document-uri(_)
dump=prof:dump(_)
dv=distinct-values(_)
efu=encode-for-uri(_)
ehu=escape-html-uri(_)
elem=element()
empt=empty(_)
eo=exactly-one(_)
erro=error(_)
ev=environment-variable(_)
ew=ends-with(_)
ewi=element-with-id(_)
exis=exists(_)
fa=function-arity(_)
fals=false(_)
fd=format-date(_)
fdt=format-dateTime(_)
fe=for-each(_)
fep=for-each-pair(_)
fi=format-integer(_)
filt=filter(_)
fl=fold-left(_)
fl=function-lookup(_)
floo=floor(_)
fn=format-number(_)
fn=function-name(_)
foll=following::
for=for $_ in \nreturn 
fr=fold-right(_)
fs=following-sibling::
ft=format-time(_)
func=declare function _() {\n  \n};
gi=generate-id(_)
group=group by $_
hc=has-children(_)
head=head(_)
hfd=hours-from-duration(_)
hfdt=hours-from-dateTime(_)
hft=hours-from-time(_)
ib=insert-before(_)
id=id(_)
idre=idref(_)
import=import module namespace _ = '';\n
inne=innermost(_)
insert=insert node _ into 
io=index-of(_)
isp=in-scope-prefixes(_)
it=implicit-timezone(_)
itu=iri-to-uri(_)
jd=json-doc(_)
lang=lang(_)
last=last(_)
lc=lower-case(_)
let=let $_ := \nreturn 
ln=local-name(_)
lnfq=local-name-from-QName(_)
matc=matches(_)
max=max(_)
mfd=minutes-from-duration(_)
mfd=month-from-date(_)
mfd=months-from-duration(_)
mfdt=minutes-from-dateTime(_)
mfdt=month-from-dateTime(_)
mft=minutes-from-time(_)
min=min(_)
module=module namespace _ = '';\n
name=name(_)
nill=nilled(_)
nl=&#xA;
nn=node-name(_)
not=not(_)
ns=normalize-space(_)
nu=namespace-uri(_)
nu=normalize-unicode(_)
nufp=namespace-uri-for-prefix(_)
nufq=namespace-uri-from-QName(_)
numb=number(_)
oom=one-or-more(_)
order=order by _
oute=outermost(_)
pare=parent::
path=path(_)
pfq=prefix-from-QName(_)
pi=processing-instruction()
pid=parse-ietf-date(_)
pj=parse-json(_)
posi=position(_)
prec=preceding::
ps=preceding-sibling::
put=put(_)
px=parse-xml(_)
pxf=parse-xml-fragment(_)
remo=remove(_)
rename=rename node _ as 
repl=replace(_)
replace=replace node _ with 
reve=reverse(_)
rhte=round-half-to-even(_)
rng=random-number-generator(_)
root=root(_)
roun=round(_)
rq=resolve-QName(_)
ru=resolve-uri(_)
rv=replace value of node _ with 
sa=substring-after(_)
sb=substring-before(_)
sbu=static-base-uri(_)
seri=serialize(_)
sfd=seconds-from-duration(_)
sfdt=seconds-from-dateTime(_)
sft=seconds-from-time(_)
sj=string-join(_)
sl=string-length(_)
some=some $_ in \nsatisfies 
sort=sort(_)
stc=string-to-codepoints(_)
stri=string(_)
subs=subsequence(_)
subs=substring(_)
sum=sum(_)
sw=starts-with(_)
switch=switch(_)\n  case  return \n  default return 
tab=&#x9;
tail=tail(_)
text=text()
tfd=timezone-from-date(_)
tfdt=timezone-from-dateTime(_)
tft=timezone-from-time(_)
toke=tokenize(_)
trace=trace(_ , 'Info: ')
tran=translate(_)
true=true(_)
try=try {\n  _\n} catch * {\n  \n}
type=typeswitch(_)\n  case  return \n  default return 
uc=upper-case(_)
uc=uri-collection(_)
unor=unordered(_)
ut=unparsed-text(_)
uta=unparsed-text-available(_)
utl=unparsed-text-lines(_)
var=declare variable $_ := ;
xtj=xml-to-json(_)
jtx=json-to-xml(_)
yfd=year-from-date(_)
yfd=years-from-duration(_)
yfdt=year-from-dateTime(_)
zoo=zero-or-one(_)
