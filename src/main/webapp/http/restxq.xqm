(:~
 : This module contains some basic examples for RESTXQ annotations
 : @author BaseX Team
 :)
module namespace page = 'http://basex.org/modules/web-page';

declare namespace rest = 'http://exquery.org/ns/restxq';

declare variable $page:style :=
  <style type="text/css"><!--
  body { font-family:Ubuntu,'Trebuchet MS',SansSerif; }
  h2 { color:#0040A0; }
  hr { height:1px; border:0px; background-color:black; }
  a { color:#0040A0; text-decoration: none; }
  --></style>;

declare %rest:path("")
        %output:method("xhtml")
        %output:omit-xml-declaration("no")
        %output:doctype-public("-//W3C//DTD XHTML 1.0 Transitional//EN")
        %output:doctype-system("http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd")
  function page:start() {

  let $title := 'Welcome to RESTXQ!' return
  <html xmlns="http://www.w3.org/1999/xhtml">
    <head>
      <title>{ $title }</title>
      { $page:style }
    </head>
    <body>
      <h2>{ $title }</h2>
      <p><a href="http://docs.basex.org/wiki/RESTXQ">RESTXQ</a> is a new API
      that facilitates the use of XQuery as a Server Side processing language
      for the Web.<br/>
      This page has been generated by a RESTXQ module located in the web
      server's root directory.</p>
      <p>The following links return a page with dynamic contents:</p>
      <ul>
        <li><a href="/restxq/hello/World">http://localhost:8984/restxq/hello/World</a></li>
        <li><a href="/restxq/hello/Universe">http://localhost:8984/restxq/hello/Universe</a></li>
      </ul>
      <p>The following form demonstrates the form parameters:</p>
      <form method="post" action="/restxq/form">
        <p>Your message:<br />
        <input name="content" size="50"></input>
        <input type="submit" /></p>
      </form>
      <p>The source of this file is shown below:</p>
      <hr/>
      <pre>{ unparsed-text(static-base-uri()) }</pre>
      <hr/>
      <p style='text-align:right;'><a href='..'>...back to main page</a></p>
    </body>
  </html>
};

declare %rest:path("hello/{$world}")
        %rest:GET
        %rest:header-param("User-Agent", "{$agent}")
        function page:hello($world as xs:string, $agent as xs:string*) {
  <response>
    <title>Hello { $world }!</title>
    <info>You requested this page with { $agent }.</info>
  </response>
};

declare %rest:path("form/")
        %rest:POST
        %rest:form-param("content","{$message}", "'no message delivered'")
        function page:hello-postman($message as xs:string) {
  <response>
    <title>Hello!</title>
    <info>It seems you posted a message: { $message }</info>
  </response>
};
